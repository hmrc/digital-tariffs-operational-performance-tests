package tariffclassificationhar

import java.net.URLDecoder

import scala.concurrent.duration._
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import io.gatling.jdbc.Predef._

class RecordedSimulation extends Simulation {

	val httpProtocol = http
		.baseURL("http://localhost:9581")
		.disableFollowRedirect
		.inferHtmlResources(BlackList(""".*\.js""", """.*\.css""", """.*\.gif""", """.*\.jpeg""", """.*\.jpg""", """.*\.ico""", """.*\.woff""", """.*\.(t|o)tf""", """.*\.png""", """.*\.map"""), WhiteList())
		.acceptHeader("text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8")
		.acceptEncodingHeader("gzip, deflate")
		.acceptLanguageHeader("en-GB,en-US;q=0.9,en;q=0.8")
		.userAgentHeader("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36")

	private val waitTime = 5
	private val applicationID = 1897
	private val samlRequestPattern = """SAMLRequest=([^"]+)RelayState"""
	private val relayStatePattern = """RelayState=([^"]+|)"""
	private val samlResponcePattern = """SamlResponse=([^"]+)relayState"""
	private val csrfPattern = """<input type="hidden" name="csrfToken" value="([^"]+)""""

	private def saveSamlRequest() = currentLocationRegex(samlRequestPattern).saveAs("samlRequest")
	private def saveRelayState() = currentLocationRegex(relayStatePattern).saveAs("relayState")
	private def saveSamlResponse() = currentLocationRegex(samlResponcePattern).saveAs("samlResponse")
	private def saveCsrfToken() = regex(_ => csrfPattern).saveAs("csrfToken")
	private def decodeSaml(saml: String) = URLDecoder.decode(saml, java.nio.charset.StandardCharsets.UTF_8.toString())

	val headers_0 = Map("Upgrade-Insecure-Requests" -> "1")

	val headers_3 = Map(
		"Cache-Control" -> "max-age=0",
		"Origin" -> "http://localhost:9043",
		"Upgrade-Insecure-Requests" -> "1")

	val headers_4 = Map(
		"Cache-Control" -> "max-age=0",
		"Upgrade-Insecure-Requests" -> "1")

	val headers_11 = Map(
		"Cache-Control" -> "max-age=0",
		"Origin" -> "http://localhost:9581",
		"Upgrade-Insecure-Requests" -> "1")

    val uri1 = "localhost"

	val scn = scenario("RecordedSimulation")
		.exec(http("request_0")
			.get("/tariff-classification/")
			.headers(headers_0)
  		.check(status.is(303)))
		.pause(waitTime)
			//.resources(http("request_1")
		.exec(http("request_1")
			.get("http://" + uri1 + ":9041/stride/sign-in?successURL=http%3A%2F%2Flocalhost%3A9581%2Ftariff-classification%2F&origin=tariff-classification-frontend")
			.headers(headers_0)
			.check(saveSamlRequest())
			.check(status.is(303)))
		.pause(waitTime)
		.exec(http("request_2")
			.get("http://" + uri1 + ":9043/stride-idp-stub/auth-request?SAMLRequest=${samlRequest}RelayState=successURL%3Dhttp%253A%252F%252Flocalhost%253A9581%252Ftariff-classification%252F%26failureURL%3D%252Fstride%252Ffailure%253FcontinueURL%253Dhttp%2525253A%2525252F%2525252Flocalhost%2525253A9581%2525252Ftariff-classification%2525252F")
			.headers(headers_0)
			.check(status.is(303)))
		.pause(waitTime)
		.exec(http("request_3")
			.post("http://" + uri1 + ":9043/stride-idp-stub/sign-in")
			.headers(headers_3)
			.formParam("RelayState", "successURL=http%3A%2F%2Flocalhost%3A9581%2Ftariff-classification%2F&failureURL=%2Fstride%2Ffailure%3FcontinueURL%3Dhttp%25253A%25252F%25252Flocalhost%25253A9581%25252Ftariff-classification%25252F")
			.formParam("pid", "0")
			.formParam("usersGivenName", "Performance")
			.formParam("usersSurname", "User")
			.formParam("emailAddress", "")
			.formParam("status", "true")
			.formParam("signature", "valid")
			.formParam("roles", "classification")
			.check(saveSamlResponse())
			.resources(http("request_4")
			.get("http://" + uri1 + ":9043/stride-idp-stub/redirect-to-stride?redirectUrl=http%3A%2F%2Flocalhost%3A9041%2Fstride%2Fauth-response&encodedSamlResponse=${samlResponse}&relayState=successURL%3Dhttp%253A%252F%252Flocalhost%253A9581%252Ftariff-classification%252F%26failureURL%3D%252Fstride%252Ffailure%253FcontinueURL%253Dhttp%2525253A%2525252F%2525252Flocalhost%2525253A9581%2525252Ftariff-classification%2525252F")
			.headers(headers_4),
            http("request_5")
			.post("http://" + uri1 + ":9041/stride/auth-response")
			.headers(headers_3)
			.formParam("SAMLResponse", decodeSaml("${samlResoonse}"))
			.formParam("RelayState", "successURL=http%3A%2F%2Flocalhost%3A9581%2Ftariff-classification%2F&failureURL=%2Fstride%2Ffailure%3FcontinueURL%3Dhttp%25253A%25252F%25252Flocalhost%25253A9581%25252Ftariff-classification%25252F")
			.check(status.is(303)),
            http("request_6")
			.get("/tariff-classification/")
			.headers(headers_4))
			.check(status.is(303)))
		.pause(3)
		.exec(http("request_7")
			.get("/tariff-classification/queues/gateway")
			.headers(headers_0))
		.pause(3)
		.exec(http("request_8")
			.get(s"/tariff-classification/cases/${applicationID}")
			.headers(headers_0))
		.pause(1)
		.exec(http("request_9")
			.get(s"/tariff-classification/cases/${applicationID}/application")
			.headers(headers_0))
		.pause(2)
		.exec(http("request_10")
			.get(s"/tariff-classification/cases/${applicationID}/release")
			.headers(headers_0)
  		.check(saveCsrfToken()))
		.pause(5)
		.exec(http("request_11")
			.post(s"/tariff-classification/cases/${applicationID}/release")
			.headers(headers_11)
			.formParam("csrfToken", "${csrfToken}")
			.formParam("queue", "act"))
		.pause(3)
		.exec(http("request_12")
			.get("/tariff-classification")
			.headers(headers_0))
		.pause(1)
		.exec(http("request_13")
			.get("/tariff-classification/queues/act")
			.headers(headers_0))
		.pause(3)
		.exec(http("request_14")
			.get(s"/tariff-classification/cases/${applicationID}")
			.headers(headers_0))
		.pause(1)
		.exec(http("request_15")
			.get(s"/tariff-classification/cases/${applicationID}/application")
			.headers(headers_0))
		.pause(3)
		.exec(http("request_16")
			.get(s"/tariff-classification/cases/${applicationID}/refer")
			.headers(headers_0))
		.pause(4)
		.exec(http("request_17")
			.get(s"/tariff-classification/cases/${applicationID}/application")
			.headers(headers_0))
		.pause(2)
		.exec(http("request_18")
			.get(s"/tariff-classification/cases/${applicationID}/ruling")
			.headers(headers_0)
  		.check(saveCsrfToken()))
		.pause(2)
		.exec(http("request_19")
			.get(s"/tariff-classification/cases/${applicationID}/ruling/edit")
			.headers(headers_0))
		.pause(17)
		.exec(http("request_20")
			.post(s"/tariff-classification/cases/${applicationID}/ruling")
			.headers(headers_11)
			.formParam("csrfToken", "${csrfToken}")
			.formParam("bindingCommodityCode", "123456")
			.formParam("goodsDescription", "test")
			.formParam("methodSearch", "test")
			.formParam("justification", "test")
			.formParam("methodCommercialDenomination", "test")
			.formParam("methodExclusion", "test"))
		.pause(2)
		.exec(http("request_21")
			.get(s"/tariff-classification/cases/${applicationID}/complete")
			.headers(headers_0)
  		.check(saveCsrfToken()))
		.pause(1)
		.exec(http("request_22")
			.post(s"/tariff-classification/cases/${applicationID}/complete")
			.headers(headers_11)
			.formParam("csrfToken", "${csrfToken}"))

	setUp(scn.inject(atOnceUsers(1))).protocols(httpProtocol)
}